#!/usr/bin/env bash
#
# bootstrap installs things.

DOTFILES_ROOT=$(pwd -P)

set -e

echo ''

info () {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

setup_gitconfig () {
  if ! [ -f git/gitconfig.symlink ]
  then
    info 'setup gitconfig'

    cp git/gitconfig.symlink.example git/gitconfig.symlink

    if [ "$(uname -s)" == "Darwin" ]
    then
      gpg --full-generate-key
      user ' - What is your GPG signing key? (Run `gpg --list-keys`)'
      read -e gpg_signing_key
      git config --global user.signingkey "$gpg_signing_key"
      git config --global credential.helper osxkeychain
      git config --global diff.external difft
    else
      git config --global credential.helper cache
      sed -i "s/gpgsign = true/gpgsign = false/" git/gitconfig.symlink
    fi


    success 'gitconfig'
  fi
}


link_file () {
  local src=$1 dst=$2

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then
    rm -rf "$dst"
    success "removed $dst"
  fi

  ln -s "$1" "$2"
  success "linked $1 to $2"
}

install_dotfiles () {
  info 'installing dotfiles'

  for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink' -not -path '*.git*')
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

install_dotfiles
./install-deps.sh
setup_gitconfig

# find the installers and run them iteratively
for installer in $(find . -maxdepth 2 -name "*install.sh"); do
  echo "[[ ${installer} ]]"
  sh -c "${installer}"
done

echo ''
echo '  All installed!'
