""" Leader
let mapleader = " "

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""" Basics

set autowrite                         " :write before running commands
set backspace=indent,eol,start        " http://vi.stackexchange.com/a/2163
set clipboard=unnamed                 " Use system clipboard
set diffopt+=vertical                 " Always use vertical diffs
set expandtab                         " Tab in insert mode will be spaces
set ignorecase                        " When searching don't worry if lowercase
set incsearch                         " Do incremental searching
set laststatus=2                      " Always show status line
set lazyredraw                        " Reduce the redraw frequency
set nocompatible                      " Don't worry about vi compatibility
set noswapfile                        " No weird .swp fields
set number                            " Show line numbers
set ruler                             " Show the cursor position all the time
set shiftwidth=2                      " >> and << commands shift 2 spaces
set smartcase                         " Strict search case when includes upper
set tabstop=2                         " Softtabs, 2 spaces
set textwidth=80                      " Wrap lines at 80 characters
set ttyfast                           " Send more characters in fast terminals
set wildmenu                          " Tab autocomplete in command mode

syntax on

nnoremap <leader>sv :source<space>~/.vimrc<CR> " Source this file

" Sets background for 101st column onward
if exists('+colorcolumn')
  " let &colorcolumn=join(range(121,999),",")
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""" Plugins

call plug#begin('~/.vim/plugged')

Plug 'alampros/vim-styled-jsx'                      " styled-jsx syntax
Plug 'airblade/vim-gitgutter'                       " Show git changed lines
Plug 'chriskempson/base16-vim'
Plug 'ervandew/supertab'
Plug 'mxw/vim-jsx'                                  " Vim-JSX integration
Plug 'pangloss/vim-javascript'                      " Vim-JS integration
Plug 'scrooloose/nerdtree'
Plug 'terryma/vim-multiple-cursors'                 " Sublime-like mutli-cursor
Plug 'tpope/vim-eunuch'                             " Nice UNIX commands
Plug 'tpope/vim-fugitive'                           " Vim-Git bindings
Plug 'tpope/vim-rhubarb'                            " Vim-GitHub
Plug 'tpope/vim-rails'                              " Vim-Rails bindings
Plug 'tpope/vim-vinegar'                            " Better netrw
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vim-ruby/vim-ruby'                            " Vim-Ruby integration
Plug 'vim-scripts/tComment'                         " Comment out lines
Plug '/usr/local/opt/fzf' | Plug 'junegunn/fzf.vim' " Fuzzy finder

call plug#end()

filetype plugin indent on

" colorscheme base16-ocean
" let base16colorspace=256
" set background=dark
" highlight MatchParen ctermbg=blue guibg=lightblue

" FZF settings
nnoremap <C-T> :Files<CR>
nnoremap <C-B> :Buffers<CR>
nnoremap <leader>/ :BLines<CR>

" Make jump to tag open up FZF
nnoremap <c-]> :Tags <c-r><c-w><cr>

" Create a search command that uses Ripgrep and offers previews
command! -bang -complete=file -nargs=* Search
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always '.<q-args>, 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)
nnoremap \ :Ag<space>
nnoremap K :Ag <C-R><C-W><CR>
let g:fzf_buffers_jump = 1 " [Buffers] Jump to the existing window if possible

" Multi-curosr settings
let g:multi_cursor_next_key='<C-n>' " Multi-cursor set to CTRL+N

" JSX settings
let g:jsx_ext_required = 0 " JSX highlighting in .js files

" Airline settings
let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline_theme = 'base16'

" NerdTree settings
nnoremap - :NERDTreeFind<CR>

" Prettier JS
autocmd Filetype javascript set formatprg=prettier\ --stdin\ --single-quote\ --print-width=100
autocmd Filetype css,scss set formatprg=prettier\ --single-quote\ --parser=postcss
autocmd Filetype json set formatprg=prettier\ --single-quote\ --parser=json
autocmd Filetype javascript,css,scss,json nnoremap <leader>f mpggVGgq'pzz
" Not ready for this yet, but this will prettier a file on save
" autocmd BufWritePre *.js :normal mpggVGgq'p

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""" Window management

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""" Shortcuts

" Binding pry shortcut
map <leader>bro orequire'pry';binding.pry<esc>:w<cr>

" Easy current filepath
cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'

" Switch between the last two files
nnoremap <leader><leader> <c-^>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""" Alter Vim's behavior

" Persistent undo history
if exists("+undofile")
  if isdirectory($HOME . '/.vim/undo') == 0
    :silent !mkdir -p ~/.vim/undo > /dev/null 2>&1
  endif

  set undofile
  set undodir=~/.vim/undo/
endif

" Don't copy the contents of an overwritten selection.
vnoremap p "_dP
vnoremap P "_dP

" Traverse lines as they are seen not as as they are known to Vim
nnoremap j gj
nnoremap k gk

" No arrow keys
" nnoremap <Left> :echoe "Use h"<CR>
" nnoremap <Right> :echoe "Use l"<CR>
" nnoremap <Up> :echoe "Use k"<CR>
" nnoremap <Down> :echoe "Use j"<CR>

" Ignored files/directories from autocomplete (and CtrlP)
set wildignore+=*/tmp/*
set wildignore+=*.so
set wildignore+=*.zip
set wildignore+=*/vendor/bundle/*
set wildignore+=*/node_modules/
