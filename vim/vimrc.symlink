"
" Vim settings for @kmcq, adapted from @bswinnerton
"

" Settings in this file may depend on plugins, so let's install them first.
" Not to be confused with the contents of ~/.vim/plugin/* which are
" configuration options for each plugin and automatically loaded by Vim.
source ~/.vim/plugin/plugins.vim

"-------------------------------------------------------------------------------
" Basics
"-------------------------------------------------------------------------------

syntax on

let mapleader=' '                     " Leader - override the default \

set autoread                          " Auto reload changed files
set autowrite                         " :write before running commands
set backspace=indent,eol,start        " http://vi.stackexchange.com/a/2163
set cmdheight=2
set completeopt=menuone,preview
set diffopt+=vertical                 " Always use vertical diffs
set expandtab shiftwidth=2 tabstop=2  " Two spaces for tabs everywhere
set gdefault
set ignorecase smartcase              " Search queries intelligently set case
set incsearch                         " Show search results as you type
set infercase                         " Ignore case on insert completion
set laststatus=2                      " Show status line on startup
set lazyredraw                        " Reduce the redraw frequency
set matchpairs+=<:>                   " Also match angle brackets
set nobackup nowritebackup noswapfile " Turn off backup files
set noerrorbells novisualbell         " Turn off visual and audible bells
set nohlsearch                        " Don't highlight search terms
set showcmd                           " Show size of visual selection
set showfulltag                       " Show extra information when using tags in insert mode
set splitbelow
set splitright
set timeoutlen=1000 ttimeoutlen=0     " Remove timeout when hitting escape
set ttyfast                           " Send more characters in fast terminals
set wildmenu                          " Tab autocomplete in command mode

" Ignored files/directories from autocomplete (and CtrlP)
set wildignore+=*/tmp/*
set wildignore+=*.so
set wildignore+=*.zip
set wildignore+=*/vendor/bundle/*
set wildignore+=*/node_modules/

"-------------------------------------------------------------------------------
" Interface
"-------------------------------------------------------------------------------

set number            " Enable line numbers
set scrolloff=5       " Leave 5 lines of buffer when scrolling
set sidescrolloff=10  " Leave 10 characters of horizontal buffer when scrolling

"-------------------------------------------------------------------------------
" Alter Vim's behavior
"-------------------------------------------------------------------------------

" Use system clipboard
set clipboard=unnamed

" Persistent undo history
if exists("+undofile")
  if isdirectory($HOME . '/.vim-undo') == 0
    :silent !mkdir -p ~/.vim-undo > /dev/null 2>&1
  endif

  set undofile
  set undodir=~/.vim-undo/
endif

" Don't copy the contents of an overwritten selection.
vnoremap p "_dP
vnoremap P "_dP

"-------------------------------------------------------------------------------
" Colors & Formatting
"-------------------------------------------------------------------------------

"-------------------------------------------------------------------------------
" Custom Movement
"-------------------------------------------------------------------------------

" Don't deselect visual block after indent/unindent
vnoremap < <gv
vnoremap > >gv

" Shortcut for <CTRL> + hjkl to traverse panes
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Bash like keys for the Vim command line
cnoremap <C-A> <Home>
cnoremap <C-E> <End>
cnoremap <C-K> <C-U>

" Remap j and k to act as expected when used on long, wrapped, lines
nnoremap j gj
nnoremap k gk

" Use ]d and [d to navigate between errors
map <silent> [d <Plug>(ale_previous_wrap)
map <silent> ]d <Plug>(ale_next_wrap)

" Use ]d and [d to navigate between Git hunks
nmap ]c <Plug>(GitGutterNextHunk)
nmap [c <Plug>(GitGutterPrevHunk)


"-------------------------------------------------------------------------------
" Custom Shortcuts
"-------------------------------------------------------------------------------

" Source this file
nnoremap <leader>sv :source<space>~/.vimrc<CR>

" Redraw the screen
map <silent> <Leader>r :redraw!<CR>

" Quick search
map <Leader>s :Search<Space>

" Binding pry shortcut
map <leader>bro orequire'pry';binding.pry<esc>:w<cr>

" Easy current filepath
cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'

" Switch between the last two files
nnoremap <leader><leader> <c-^>

" Override dot in visual mode to send a 'normal mode' dot
xnoremap . :normal .<CR>

" Use the @ key in visual mode to apply a given macro
xnoremap @ :<C-u>call ExecuteMacroOverVisualRange()<CR>
function! ExecuteMacroOverVisualRange()
  echo "@".getcmdline()
  execute ":'<,'>normal @".nr2char(getchar())
endfunction


"-------------------------------------------------------------------------------
" Looking for more? Check out ~/.vim/plugin/* for plugin-specific configuration
"-------------------------------------------------------------------------------

" vim: set syntax=vim:
